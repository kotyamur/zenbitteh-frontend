{"version":3,"file":"static/js/360.2d5868f7.chunk.js","mappings":"kTAGaA,EAAUC,EAAAA,GAAAA,KAAH,8EAMPC,EAAQD,EAAAA,GAAAA,EAAH,8KASLE,EAAcF,EAAAA,GAAAA,MAAH,iRAcXG,EAAcH,EAAAA,GAAAA,MAAH,4MAUXI,EAAkBJ,EAAAA,GAAAA,EAAH,0KAUfK,EAAYL,EAAAA,GAAAA,OAAH,2TAgBTM,EAAiBN,EAAAA,GAAAA,EAAH,4LAUdO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sJASVS,EAAaT,EAAAA,GAAAA,EAAH,kG,oBCtEVU,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,oBACpDC,SAAUJ,EAAAA,KACPK,OAAO,EAAG,wCACVF,SAAS,yBAGRG,EAAgB,CACpBJ,MAAO,GACPE,SAAU,IAGCG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAoC,WAAtBJ,EAASK,SAEvBC,EAAY,mCAAG,WAAOC,EAAQC,GAAf,qEACnBJ,EADmB,gCACCN,GAASW,EAAAA,EAAAA,IAAMF,IADhB,6CACiCT,GAASY,EAAAA,EAAAA,IAASH,IADnD,OAEnBC,EAAQG,eAAc,GACtBH,EAAQI,YACRV,EAAS,KAJU,4CAAH,wDAOZW,GAASC,EAAAA,EAAAA,IAAU,CACvBlB,cAAeA,EACfmB,iBAAkB1B,EAClB2B,SAAUV,IAEZ,OACE,UAAC5B,EAAD,CAASsC,SAAUH,EAAOP,aAAcW,aAAa,MAArD,WACE,SAACrC,EAAD,UAAQwB,EAAc,QAAU,cAChC,UAACvB,EAAD,oBAEE,SAACC,EAAD,CACEoC,KAAK,QACLC,KAAK,QACLC,SAAUP,EAAOQ,aACjBC,MAAOT,EAAON,OAAOf,MACrB+B,YAAY,UAEbV,EAAOW,OAAOhC,OACb,SAACJ,EAAD,UAAayB,EAAOW,OAAOhC,QACzB,SAEN,UAACX,EAAD,uBAEE,SAACC,EAAD,CACEoC,KAAK,WACLC,KAAK,WACLC,SAAUP,EAAOQ,aACjBC,MAAOT,EAAON,OAAOb,SACrB6B,YAAY,aAEbV,EAAOW,OAAO9B,UACb,SAACN,EAAD,UAAayB,EAAOW,OAAO9B,WACzB,SAEN,SAACX,EAAD,gCAEA,SAACC,EAAD,CAAWkC,KAAK,SAASO,SAAUZ,EAAOa,aAA1C,SACGtB,EAAc,UAAY,YAE5BA,GACC,UAACnB,EAAD,wCACsB,SAACC,EAAD,CAAYyC,GAAG,YAAf,yBAGtB,UAAC1C,EAAD,iCACoB,SAACC,EAAD,CAAYyC,GAAG,SAAf,0BAK3B,E,sDCzFYjD,EAAUC,EAAAA,GAAAA,IAAH,4NAGMiD,GAObC,EAAYlD,EAAAA,GAAAA,IAAH,6DAKTmD,EAAMnD,EAAAA,GAAAA,IAAH,+HCfD,SAASoD,IACtB,OACE,SAAC,EAAD,WACE,SAACF,EAAD,WACE,SAACC,EAAD,WACE,SAACjC,EAAD,SAKT,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.form`\n  width: 350px;\n  height: 354px;\n  flex-shrink: 0;\n`;\n\nexport const Title = styled.p`\n  color: #172234;\n  font-family: Merriweather;\n  font-size: 28px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 34px; /* 121.429% */\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  margin-top: 20px;\n  color: #000;\n  font-family: Merriweather;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 20px; /* 142.857% */\n`;\n\nexport const StyledInput = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 20px 12px 20px;\n  border-radius: 5px;\n  border: 2px solid #e0e0e0;\n  background: #e0e0e0;\n`;\n\nexport const StyledQuestText = styled.p`\n  margin-top: 10px;\n  text-align: end;\n  color: #b29f7e;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 22px;\n`;\n\nexport const StyledBtn = styled.button`\n  height: 44px;\n  width: 100%;\n  padding: 11px 0px;\n  margin-top: 30px;\n  border-radius: 5px;\n  background: #b29f7e;\n  color: #fff;\n  text-align: center;\n  font-family: Merriweather;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 22px; /* 137.5% */\n`;\n\nexport const StyledQuestion = styled.p`\n  margin-top: 10px;\n  color: #172234;\n  text-align: center;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 22px; /* 157.143% */\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-top: 10px;\n  color: #b29f7e;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 22px;\n`;\n\nexport const ErrrorText = styled.p`\n  position: absolute;\n  right: 10px;\n  color: red;\n  font-size: 12px;\n`;","import { useFormik } from 'formik';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  Wrapper,\n  Title,\n  StyledLabel,\n  StyledInput,\n  StyledLink,\n  StyledBtn,\n  StyledQuestion,\n  StyledQuestText,\n  ErrrorText,\n} from './LoginForm.styled';\nimport { logIn, register } from 'redux/auth/authOperations';\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Enter your email'),\n  password: Yup.string()\n    .length(6, 'Password should be 6 characters long')\n    .required('Enter your password'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isLoginPage = location.pathname === '/login';\n\n  const handleSubmit = async (values, actions) => {\n    isLoginPage ? await dispatch(logIn(values)) : await dispatch(register(values));\n    actions.setSubmitting(false);\n    actions.resetForm();\n    navigate('/');\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: loginSchema,\n    onSubmit: handleSubmit,\n  });\n  return (\n    <Wrapper onSubmit={formik.handleSubmit} autoComplete=\"off\">\n      <Title>{isLoginPage ? 'Login' : 'Register'}</Title>\n      <StyledLabel>\n        Email\n        <StyledInput\n          type=\"email\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          placeholder=\"Email\"\n        />\n        {formik.errors.email ? (\n          <ErrrorText>{formik.errors.email}</ErrrorText>\n        ) : null}\n      </StyledLabel>\n      <StyledLabel>\n        Password\n        <StyledInput\n          type=\"password\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          placeholder=\"Password\"\n        />\n        {formik.errors.password ? (\n          <ErrrorText>{formik.errors.password}</ErrrorText>\n        ) : null}\n      </StyledLabel>\n      <StyledQuestText>Forgot password?</StyledQuestText>\n\n      <StyledBtn type=\"submit\" disabled={formik.isSubmitting}>\n        {isLoginPage ? 'Sign In' : 'Sign up'}\n      </StyledBtn>\n      {isLoginPage ? (\n        <StyledQuestion>\n          Donâ€™t have account? <StyledLink to=\"/register\">Sign up</StyledLink>\n        </StyledQuestion>\n      ) : (\n        <StyledQuestion>\n          Log into account? <StyledLink to=\"/login\">Sign in</StyledLink>\n        </StyledQuestion>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport LoginBgImage from '../../images/loginBg.jpg';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 80px);\n  background-image: url(${LoginBgImage});\n  background-repeat: no-repeat;\n  background-position: left;\n  background-size: contain;\n  background-color: #fff;\n`;\n\nexport const Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: calc(100vh - 80px);\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Wrapper, Container, Box } from './Login.styled';\n\nexport default function Login() {\n  return (\n    <Wrapper>\n      <Container>\n        <Box>\n          <LoginForm />\n        </Box>\n      </Container>\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","Title","StyledLabel","StyledInput","StyledQuestText","StyledBtn","StyledQuestion","StyledLink","Link","ErrrorText","loginSchema","Yup","shape","email","required","password","length","initialValues","LoginForm","dispatch","useDispatch","location","useLocation","navigate","useNavigate","isLoginPage","pathname","handleSubmit","values","actions","logIn","register","setSubmitting","resetForm","formik","useFormik","validationSchema","onSubmit","autoComplete","type","name","onChange","handleChange","value","placeholder","errors","disabled","isSubmitting","to","LoginBgImage","Container","Box","Login"],"sourceRoot":""}